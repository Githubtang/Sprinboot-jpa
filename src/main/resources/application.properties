spring.application.name=springboot-tyy
server.port=8080
# \u6570\u636E\u5E93\u8FDE\u63A5
spring.datasource.url=jdbc:mysql://localhost:3306/ruoyi-tyy?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# hikari \u8FDE\u63A5\u6C60
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=60000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.pool-name=DatebookHikariCP
# \u66F4\u65B0\u6570\u636E\u5E93
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.database=
# \u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B\u4E3AINFO
logging.level.root=INFO
# \u6307\u5B9A\u7279\u5B9A\u5305\u7684\u65E5\u5FD7\u7EA7\u522B\u4E3ADEBUG
logging.level.com.example=DEBUG
logging.level.org.springframework.validation=DEBUG
# \u8BBE\u7F6E\u65E5\u5FD7\u6587\u4EF6\u8F93\u51FA
logging.file.name=logs/springboot-tyy-app.log
logging.file.path=logs
# \u63A7\u5236\u53F0\u8F93\u51FA\u7684\u65E5\u5FD7\u683C\u5F0F
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
# redis
spring.data.redis.host=192.168.178.130
spring.data.redis.port=6379
spring.data.redis.timeout=6000
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.jedis.pool.max-idle=8
spring.data.redis.jedis.pool.min-idle=0
# minio
minio.client.MASTER.url=http://192.168.178.130:9000
minio.client.MASTER.accessKey=8Ul9OryP6dXopiTq8de1
minio.client.MASTER.secretKey=fNVVoxwoLThRv4tLAl0ZtN9YN9JFjsQZOi9fSMlT
minio.client.MASTER.bucketName=test
minio.primary=MASTER
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=100MB
# Elasticsearch
spring.data.elasticsearch.repositories.enabled=true
spring.elasticsearch.uris=http://192.168.178.130:9200/
# token
token.expireTime=3600
token.secret_key=Y2M1ZTI4MDM4ZTQwNGJmYjE5MjEyZTBlZDYxNzEyMjk4MjE1MjMzYzdhN2YzZTc1OTQ2YzEy
token.header=Authorization
# knife4j
knife4j.enable=true
# security
spring.elasticsearch.password=2545958861
# kafka
spring.kafka.bootstrap-servers=192.168.178.130:9094
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=my-group
# \u7528\u6237\u914D\u7F6E
user.password.maxRetryCount=5
user.password.lockTime=10
user.ip.maxRetryCount=15
user.ip.lockTime=15

